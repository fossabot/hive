// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rpc-hive.proto

package rpc_hive

import (
	context "context"
	fmt "fmt"
	_ "github.com/benka-me/hive/go-pkg/hive"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("rpc-hive.proto", fileDescriptor_ae6f2aebc5ea9647) }

var fileDescriptor_ae6f2aebc5ea9647 = []byte{
	// 164 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x2a, 0x48, 0xd6,
	0xcd, 0xc8, 0x2c, 0x4b, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x0f, 0x2a, 0x48, 0xf6,
	0xc8, 0x2c, 0x4b, 0x95, 0xd2, 0x49, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5,
	0x4f, 0x4a, 0xcd, 0xcb, 0x4e, 0xd4, 0xcd, 0x4d, 0xd5, 0x07, 0x29, 0xd4, 0x07, 0x2b, 0x4c, 0x2a,
	0x4d, 0xd3, 0x47, 0x68, 0x33, 0x62, 0xe3, 0x62, 0x01, 0xe9, 0x72, 0x8a, 0xbb, 0xf0, 0x50, 0x8e,
	0xe1, 0xc6, 0x43, 0x39, 0x86, 0x0f, 0x0f, 0xe5, 0x18, 0x1b, 0x1e, 0xc9, 0x31, 0xae, 0x78, 0x24,
	0xc7, 0x78, 0xe2, 0x91, 0x1c, 0xe3, 0x85, 0x47, 0x72, 0x8c, 0x0f, 0x1e, 0xc9, 0x31, 0xbe, 0x78,
	0x24, 0xc7, 0xf0, 0xe1, 0x91, 0x1c, 0xe3, 0x84, 0xc7, 0x72, 0x0c, 0x17, 0x1e, 0xcb, 0x31, 0xdc,
	0x78, 0x2c, 0xc7, 0x10, 0xa5, 0x81, 0xd3, 0xae, 0xf4, 0x7c, 0xdd, 0x82, 0xec, 0x74, 0x7d, 0x98,
	0x23, 0x93, 0xd8, 0xc0, 0xd6, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x6d, 0x47, 0x1d, 0x95,
	0xb7, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HiveClient is the client API for Hive service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HiveClient interface {
}

type hiveClient struct {
	cc *grpc.ClientConn
}

func NewHiveClient(cc *grpc.ClientConn) HiveClient {
	return &hiveClient{cc}
}

// HiveServer is the server API for Hive service.
type HiveServer interface {
}

// UnimplementedHiveServer can be embedded to have forward compatible implementations.
type UnimplementedHiveServer struct {
}

func RegisterHiveServer(s *grpc.Server, srv HiveServer) {
	s.RegisterService(&_Hive_serviceDesc, srv)
}

var _Hive_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RpcHive.Hive",
	HandlerType: (*HiveServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "rpc-hive.proto",
}
